{
	"type": "object",
	"properties": {
		"host":{
			"type": "string",
			"description": "Hostname or IP address of the server."
		},
		"port":{
			"type": "number",
			"description": "Port number of the server."
		},
		"forceIPv4":{
			"type": "boolean",
			"description": "Only connect via resolved IPv4 address for `host`."
		},
		"forceIPv6":{
			"type": "boolean",
			"description": "Only connect via resolved IPv6 address for `host`."
		},
		"hostHash":{
			"enum": ["md5","sha1"],
			"description": "The host's key is hashed using this method and passed to `hostVerifier`."
		},
		"username":{
			"type": "string",
			"description": "Username for authentication."
		},
		"password":{
			"type": "string",
			"description": "Password for password-based user authentication."
		},
		"agent":{
			"type": "string",
			"description": "Path to ssh-agent's UNIX socket for ssh-agent-based user authentication (or 'pageant' when using Pagent on Windows)."
		},
		"privateKey":{
			"type": "string",
			"description": "Buffer or string that contains a private key for either key-based or hostbased user authentication (OpenSSH format)."
		},
		"passphrase":{
			"type": "string",
			"description": "For an encrypted private key, this is the passphrase used to decrypt it."
		},
		"localHostname":{
			"type": "string",
			"description": "Along with `localUsername` and `privateKey`, set this to a non-empty string for hostbased user authentication."
		},
		"localUsername":{
			"type": "string",
			"description": "Along with `localHostname` and `privateKey`, set this to a non-empty string for hostbased user authentication."
		},
		"tryKeyboard":{
			"type": "boolean",
			"description": "Try keyboard-interactive user authentication if primary user authentication method fails."
		},
		"keepaliveInterval":{
			"type": "number",
			"description": "How often (in milliseconds) to send SSH-level keepalive packets to the server. Set to 0 to disable."
		},
		"keepaliveCountMax":{
			"type": "number",
			"description": "How many consecutive, unanswered SSH-level keepalive packets that can be sent to the server before disconnection."
		},
		"readyTimeout":{
			"type": "number",
			"description": "* How long (in milliseconds) to wait for the SSH handshake to complete."
		},
		"strictVendor":{
			"type": "boolean",
			"description": "Performs a strict server vendor check before sending vendor-specific requests."
		},
		"agentForward":{
			"type": "boolean",
			"description": "Set to `true` to use OpenSSH agent forwarding (`auth-agent@openssh.com`) for the life of the connection."
		}
		/*
		"algorithms":{
			"type": "Algorithms",
			"description": "Explicit overrides for the default transport layer algorithms used for the connection."
		},
		*/
	}
}